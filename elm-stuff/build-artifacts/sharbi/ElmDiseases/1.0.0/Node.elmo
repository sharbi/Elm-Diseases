Elm.Node = Elm.Node || {};
Elm.Node.make = function (_elm) {
   "use strict";
   _elm.Node = _elm.Node || {};
   if (_elm.Node.values)
   return _elm.Node.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Node",
   $Basics = Elm.Basics.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var inputLayout = _L.fromArray([{ctor: "_Tuple2"
                                   ,_0: "background-color"
                                   ,_1: "inherit"}
                                  ,{ctor: "_Tuple2"
                                   ,_0: "border"
                                   ,_1: "0"}
                                  ,{ctor: "_Tuple2"
                                   ,_0: "border-radius"
                                   ,_1: "1000px"}
                                  ,{ctor: "_Tuple2"
                                   ,_0: "color"
                                   ,_1: "#fff"}
                                  ,{ctor: "_Tuple2"
                                   ,_0: "type"
                                   ,_1: "hidden"}
                                  ,{ctor: "_Tuple2"
                                   ,_0: "width"
                                   ,_1: "inherit"}
                                  ,{ctor: "_Tuple2"
                                   ,_0: "text-align"
                                   ,_1: "center"}
                                  ,{ctor: "_Tuple2"
                                   ,_0: "font-weight"
                                   ,_1: "bold"}
                                  ,{ctor: "_Tuple2"
                                   ,_0: "font-size"
                                   ,_1: "16px"}
                                  ,{ctor: "_Tuple2"
                                   ,_0: "line-height"
                                   ,_1: "145px"}]);
   var removeButton = _L.fromArray([{ctor: "_Tuple2"
                                    ,_0: "color"
                                    ,_1: "#000"}
                                   ,{ctor: "_Tuple2"
                                    ,_0: "height"
                                    ,_1: "12px"}
                                   ,{ctor: "_Tuple2"
                                    ,_0: "z-index"
                                    ,_1: "2"}
                                   ,{ctor: "_Tuple2"
                                    ,_0: "position"
                                    ,_1: "absolute"}
                                   ,{ctor: "_Tuple2"
                                    ,_0: "float"
                                    ,_1: "right"}
                                   ,{ctor: "_Tuple2"
                                    ,_0: "top"
                                    ,_1: "0px"}
                                   ,{ctor: "_Tuple2"
                                    ,_0: "right"
                                    ,_1: "0px"}]);
   var layout = F2(function (color,
   _v0) {
      return function () {
         switch (_v0.ctor)
         {case "_Tuple2":
            return _L.fromArray([{ctor: "_Tuple2"
                                 ,_0: "border-radius"
                                 ,_1: "1000px"}
                                ,{ctor: "_Tuple2"
                                 ,_0: "width"
                                 ,_1: "150px"}
                                ,{ctor: "_Tuple2"
                                 ,_0: "border"
                                 ,_1: "0"}
                                ,{ctor: "_Tuple2"
                                 ,_0: "text-align"
                                 ,_1: "center"}
                                ,{ctor: "_Tuple2"
                                 ,_0: "line-height"
                                 ,_1: "100px"}
                                ,{ctor: "_Tuple2"
                                 ,_0: "color"
                                 ,_1: "#fff"}
                                ,{ctor: "_Tuple2"
                                 ,_0: "height"
                                 ,_1: "150px"}
                                ,{ctor: "_Tuple2"
                                 ,_0: "cursor"
                                 ,_1: "pointer"}
                                ,{ctor: "_Tuple2"
                                 ,_0: "background-color"
                                 ,_1: color}
                                ,{ctor: "_Tuple2"
                                 ,_0: "display"
                                 ,_1: "inline"}
                                ,{ctor: "_Tuple2"
                                 ,_0: "position"
                                 ,_1: "absolute"}
                                ,{ctor: "_Tuple2"
                                 ,_0: "top"
                                 ,_1: A2($Basics._op["++"],
                                 $Basics.toString(_v0._1 - 125),
                                 "px")}
                                ,{ctor: "_Tuple2"
                                 ,_0: "left"
                                 ,_1: A2($Basics._op["++"],
                                 $Basics.toString(_v0._0 - 75),
                                 "px")}
                                ,{ctor: "_Tuple2"
                                 ,_0: "font-size"
                                 ,_1: "19px"}
                                ,{ctor: "_Tuple2"
                                 ,_0: "font-weight"
                                 ,_1: "bold"}
                                ,{ctor: "_Tuple2"
                                 ,_0: "box-shadow"
                                 ,_1: "0 5px 11px 0 rgba(0, 0, 0, 0.18), 0 4px 15px 0 rgba(0, 0, 0, 0.15)"}
                                ,{ctor: "_Tuple2"
                                 ,_0: "z-index"
                                 ,_1: "2"}
                                ,{ctor: "_Tuple2"
                                 ,_0: "autofocus"
                                 ,_1: "autofocus"}]);}
         _U.badCase($moduleName,
         "between lines 61 and 79");
      }();
   });
   var update = F2(function (action,
   model) {
      return function () {
         switch (action.ctor)
         {case "ChangeBool":
            return _U.replace([["autofocus"
                               ,$Basics.not(model.autofocus)]],
              model);
            case "NoOp": return model;
            case "Update":
            return _U.replace([["title"
                               ,action._0]],
              model);}
         _U.badCase($moduleName,
         "between lines 47 and 57");
      }();
   });
   var Model = F4(function (a,
   b,
   c,
   d) {
      return {_: {}
             ,autofocus: d
             ,location: b
             ,nodeType: c
             ,title: a};
   });
   var ChangeBool = {ctor: "ChangeBool"};
   var Update = function (a) {
      return {ctor: "Update"
             ,_0: a};
   };
   var view = F2(function (context,
   model) {
      return function () {
         var html = F3(function (place,
         color,
         model) {
            return A2($Html.div,
            _L.fromArray([$Html$Attributes.style(A2(layout,
                         color,
                         model.location))
                         ,A2($Html$Events.onClick,
                         context.actions,
                         ChangeBool)]),
            _L.fromArray([A2($Html.input,
                         _L.fromArray([$Html$Attributes.placeholder(place)
                                      ,$Html$Attributes.autofocus(model.autofocus)
                                      ,$Html$Attributes.value(model.title)
                                      ,A3($Html$Events.on,
                                      "input",
                                      $Html$Events.targetValue,
                                      function (str) {
                                         return A2($Signal.message,
                                         context.actions,
                                         Update(str));
                                      })
                                      ,$Html$Attributes.style(inputLayout)]),
                         _L.fromArray([]))
                         ,A2($Html.button,
                         _L.fromArray([A2($Html$Events.onClick,
                                      context.remove,
                                      {ctor: "_Tuple0"})
                                      ,$Html$Attributes.style(removeButton)]),
                         _L.fromArray([$Html.text("X")]))]));
         });
         return function () {
            var _v6 = model.nodeType;
            switch (_v6.ctor)
            {case "Disease": return A3(html,
                 "Disease Name...",
                 "#9c27b0",
                 model);
               case "Symptom": return A3(html,
                 "Symptom Name...",
                 "#D32F2F",
                 model);}
            _U.badCase($moduleName,
            "between lines 97 and 100");
         }();
      }();
   });
   var NoOp = {ctor: "NoOp"};
   var Symptom = {ctor: "Symptom"};
   var Disease = {ctor: "Disease"};
   var init = F2(function (loc,
   num) {
      return function () {
         var nodeType = _U.eq(num,
         1) ? Disease : Symptom;
         return {_: {}
                ,autofocus: true
                ,location: loc
                ,nodeType: nodeType
                ,title: ""};
      }();
   });
   var Context = F2(function (a,
   b) {
      return {_: {}
             ,actions: a
             ,remove: b};
   });
   _elm.Node.values = {_op: _op
                      ,init: init
                      ,view: view
                      ,update: update
                      ,Model: Model
                      ,Context: Context};
   return _elm.Node.values;
};